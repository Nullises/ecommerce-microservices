version: "3"

services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=${NATS_SERVERS}

  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PRODUCTS_MICROSERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=${PRODUCTS_DATABASE_URL}

  # Orders MS
  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - DATABASE_URL=${ORDERS_DATABASE_URL}
      - NATS_SERVERS=${NATS_SERVERS}

  # Orders DB
  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - ${ORDERS_DB_PORT}:5432
    environment:
      - POSTGRES_USER=${ORDERS_DB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ORDERS_DB_POSTGRES_PASSWORD}
      - POSTGRES_DB=${ORDERS_DB_POSTGRES_DB}
  # Payment
  payment-ms:
    build: ./payment-ms
    ports:
      - ${PAYMENTS_MICROSERVICE_PORT}:${PAYMENTS_MICROSERVICE_PORT}
    volumes:
      - ./payment-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MICROSERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
